KMD
00000000: 0240006F    ;         j main
00000004:             ; 
00000004: 4F 70 65 72 ; op1_msg defb    "Operand 1:  \0"
00000008: 61 6E 64 20 ; 
0000000C: 31 3A 20 20 ; 
00000010: 00          ; 
00000011: 4F 70 65 72 ; op2_msg defb    "Operand 2:  \0"
00000015: 61 6E 64 20 ; 
00000019: 32 3A 20 20 ; 
0000001D: 00          ; 
0000001E: 0A 00       ; new_line defb   "\n\0"
00000020:             ; 
00000020: 00          ; op1     defb 0
00000021: 00          ; op2     defb 0
00000022: 00          ; res     defb 0
00000023:             ; 
00000023:             ; 
00000023:             ; 
00000024:             ;         align
00000024:             ; main
00000024: 03000113    ; li x2, '0'
00000028: 03900193    ; li x3, '9'
0000002C: 00100213    ; li x4, 1
00000030: 00000517    ;         la x10, op1_msg 
00000034: FD450513    ; 
00000038: 00200893    ;         li x17, 2
0000003C: 00000073    ;         ecall           ; print("Operand 1: ")
00000040:             ;         
00000040:             ; loop
00000040: 00100893    ;         li x17, 1
00000044: 00000073    ;         ecall
00000048: 00050093    ;         mv x1, x10
0000004C: FE20CAE3    ;         blt x1, x2, loop
00000050: FE11C8E3    ;         bgt x1, x3, loop
00000054: FE208093    ;         subi x1, x1, 30
00000058: 04020463    ;         beqz x4, storeop
0000005C:             ;          
0000005C: 00000297    ;         sw x1, op1, x5
00000060: FC12A223    ; 
00000064:             ; 
00000064:             ; printten
00000064: 00000893    ;         li x17, 0
00000068: 00000073    ;         ecall
0000006C:             ; 
0000006C:             ; printnewline
0000006C: 00000517    ;         la x10, new_line
00000070: FB250513    ; 
00000074: 00200893    ;         li x17, 2
00000078: 00000073    ;         ecall
0000007C: 02020863    ;         beqz x4, execute
00000080: 00100293    ;         li x5, 1
00000084: 00520E63    ;         beq x4, x5, endprogram
00000088:             ;         
00000088:             ;         
00000088:             ;         ; while True:
00000088:             ;         ;   read character into x10
00000088:             ;         ;   break if x10 is a decimal digit
00000088:             ;         ;
00000088:             ;         ; store in op1 the number corresponding to the character x10
00000088:             ;         ; print character in x10
00000088:             ;         ; print '\n' (change line)
00000088:             ;         
00000088: 00000517    ;         la x10, op2_msg
0000008C: F8950513    ; 
00000090: 00200893    ;         li x17, 2
00000094: 00000073    ;         ecall           ; print("Operand 2: ")
00000098: 00000213    ;         mv x4, x0
0000009C: FA5FF0EF    ;         jal loop
000000A0:             ;         ; while True:
000000A0:             ;         ;   read character into x10
000000A0:             ;         ;   break if x10 is a decimal digit
000000A0:             ;         ;
000000A0:             ; endprogram      
000000A0:             ; storeop
000000A0: 00000297    ;         sw x1, op2, x5  
000000A4: F812A0A3    ; 
000000A8: FBDFF06F    ;         j printten
000000AC:             ;         ; store in op2 the number corresponding to the character x10
000000AC:             ;         ; print character in x10
000000AC:             ;         ; print '\n' (change line)
000000AC:             ; 
000000AC:             ; execute
000000AC:             ; 
000000AC: 00000097    ;         lw x1, op1 ; get op1
000000B0: F740A083    ; 
000000B4: 00000117    ;         lw x2, op2; get op2
000000B8: F6D12103    ; 
000000BC: 002080B3    ;         add x1, x1, x2
000000C0:             ;         ; store result
000000C0:             ;         
000000C0: 52 65 73 75 ;         result_msg      defb    "Result of Addition: \0"
000000C4: 6C 74 20 6F ; 
000000C8: 66 20 41 64 ; 
000000CC: 64 69 74 69 ; 
000000D0: 6F 6E 3A 20 ; 
000000D4: 00          ; 
000000D5: 00000517    ;         la x10, result_msg
000000D9: FEB50513    ; 
000000DD: 00200893    ;         li x17, 2
000000E1: 00000073    ;         ecall
000000E5: 00100213    ;         li x4, 1
000000E9:             ;         ; res = op1 + op2
000000E9:             ;         ; print("Result of Addition: ")
000000E9:             ;         ; print(res) on the same line as the previous print
000000E9:             ;         
000000E9: F83FF06F    ;         j printnewline
000000ED:             ;         ; print '\n' (change line)
000000ED:             ; 
000000ED:             ; 
000000ED: 00500893    ;         li x17, 5
000000F1: 00000073    ;         ecall           ; stop!
000000F5:             ;         
000000F5:             ; 

Symbol Table: Labels
: op1_msg                           00000004  Label
: op2_msg                           00000011  Label
: new_line                          0000001E  Label
: op1                               00000020  Label
: op2                               00000021  Label
: res                               00000022  Label
: main                              00000024  Label
: loop                              00000040  Label
: printten                          00000064  Label
: printnewline                      0000006C  Label
: endprogram                        000000A0  Label
: storeop                           000000A0  Label
: execute                           000000AC  Label
: result_msg                        000000C0  Label
